/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package my.tutoringEarnings;
/**
 *
 * @author Damien
 */
public class tutoringEarnings extends javax.swing.JFrame 
{
    double minimumWage = 0.0;// current minimum wage
    int minutes = 0;// minutes spent tutoring
    double money = 0.0;// money collected for tutoring
    double [][] earningsArray = new double [10][2];//declares and initializes array
    double totalMinutes = 0.0; // total minutes spent tutoring
    double totalMoney = 0.0; // total money collected for tutoring
    double averageEarnings = 0.0; // average earnings of the tutoring sessions
    double totalHours = 0.0; // total hours
                    /**
     * Creates new form tutoringEarnings
     */
    public tutoringEarnings() 
    {
        initComponents();
        TextFieldTime.setText("Please enter minutes.");//default instructions
        TextFieldMoney.setText("Please enter dollars and cents.");//default instructions
        TextFieldMinimumWage.setText("Please enter dollars and cents.");//default instructions
        TextAreaReport.append("Minutes: \t\t");//defaults Textarea for looks
        TextAreaReport.append("Money: \n\n");//defaults Textarea for looks
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Labeltime = new javax.swing.JLabel();
        LabelMoney = new javax.swing.JLabel();
        LabelMinimumWage = new javax.swing.JLabel();
        TextFieldTime = new javax.swing.JTextField();
        TextFieldMoney = new javax.swing.JTextField();
        TextFieldMinimumWage = new javax.swing.JTextField();
        ButtonEnter = new javax.swing.JButton();
        ButtonQuit = new javax.swing.JButton();
        ButtonRunReport = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextAreaReport = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tutoring Earnings", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N

        Labeltime.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Labeltime.setText("Tutoring time:");

        LabelMoney.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        LabelMoney.setText("Money collected:");

        LabelMinimumWage.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        LabelMinimumWage.setText("Current Minimum Wage:");

        TextFieldTime.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        TextFieldMoney.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        TextFieldMinimumWage.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N

        ButtonEnter.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        ButtonEnter.setText("Enter");
        ButtonEnter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonEnterActionPerformed(evt);
            }
        });

        ButtonQuit.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        ButtonQuit.setText("Quit");
        ButtonQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonQuitActionPerformed(evt);
            }
        });

        ButtonRunReport.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        ButtonRunReport.setText("Run Report");
        ButtonRunReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonRunReportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Labeltime, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LabelMoney, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LabelMinimumWage, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TextFieldTime, javax.swing.GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE)
                    .addComponent(TextFieldMoney)
                    .addComponent(TextFieldMinimumWage))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ButtonEnter, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ButtonRunReport, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(ButtonQuit, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Labeltime)
                    .addComponent(TextFieldTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonEnter))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelMoney)
                    .addComponent(TextFieldMoney, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonRunReport))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelMinimumWage)
                    .addComponent(TextFieldMinimumWage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonQuit))
                .addGap(32, 32, 32))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Reports", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N

        TextAreaReport.setEditable(false);
        TextAreaReport.setColumns(20);
        TextAreaReport.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        TextAreaReport.setRows(5);
        jScrollPane1.setViewportView(TextAreaReport);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonQuitActionPerformed
        // Button will exit application.
        System.exit(0);
    }//GEN-LAST:event_ButtonQuitActionPerformed

    private void ButtonRunReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonRunReportActionPerformed
            
/**    Run report button should calculate the total number of tutoring minutes as a decimal
 *     Average wage per hour in dollar and cents
 *     Total earnings in dollar and cents
 *     Wage analysis, compare average wage per hour and current minimum wage
*/
     // seperates the Reports from the user entries
     TextAreaReport.append("\n **********************************************\n");
     TextAreaReport.append("Reports of Tutoring Earnings Up to Date.");
     //nested loop for calculations
     for (int d = 0; d < earningsArray.length -1; d++) {
         for(int e = 0; e < earningsArray[0].length; e += 2){
             totalMinutes += earningsArray [d][e];
             totalMoney += earningsArray [d][e +1];
         }
     }
     //prints total minutes in report area
     TextAreaReport.append("\n\n\n");
     TextAreaReport.append("Total Minutes: " + totalMinutes);
     //prints total money collected in report area
     TextAreaReport.append(String.format("\tTotal Money: $" +"%.2f", totalMoney));
     //prints current minimum wage as entered by user
     TextAreaReport.append(String.format("\nCurrent minimum wage: $"+ "%.2f", minimumWage));
     //converts minutes to hours for average per hour calculation
     totalHours = totalMinutes/60;
     //calculates average earnings per hour
     averageEarnings = totalMoney/totalHours;
     //prints in report area the average wage per hour
     TextAreaReport.append("\n");
     TextAreaReport.append(String.format("Average wage per hour: $" + "%.2f", averageEarnings));
     TextAreaReport.append("\n");
     //wage analysis  if wage is lower then minimum wage then it is below 
     //if wage is equal to or less than 2*minimum wage it is average
     //if wage is more than 2*minimum wage then it is above
     if (averageEarnings < minimumWage)
     {
         TextAreaReport.append("Your average wages per hour are below average.");
     }
     else if (averageEarnings >= minimumWage && averageEarnings <= minimumWage*2)
     {
         TextAreaReport.append("Your average wages per hour are average.");
     }
     else
     {
         TextAreaReport.append("Your average wages per hour are above average.");
     }              
     
    }//GEN-LAST:event_ButtonRunReportActionPerformed

    private void ButtonEnterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonEnterActionPerformed
/**
 * Retrieve information from money, time and minimum wage text fields
 * Exception for minutes if less than 0 more then 240
 * Exception for money if less than 0
 * Store minutes and money into array
 * Exception for minimum wage if less than 0
 * Report into report text area
 */      
        //exceptions before array
        minutes = Integer.parseInt(TextFieldTime.getText());
        money = Double.parseDouble(TextFieldMoney.getText());
        minimumWage = Double.parseDouble(TextFieldMinimumWage.getText());
        int i = 0;
        try
        {
            //exception for no one may tutor less then 0 or more then 240 minutes
            if (minutes<=0 || minutes>240)
            throw new IllegalArgumentException();
        }
            catch(IllegalArgumentException exception)
        {
            //will place text in TextFieldTime    
            TextFieldTime.setText("Invalid input, please enter 0-240 minutes.");
        }
        
       
        try
        {
            // exception that money must be collected
            if (money<=0)
            throw new IllegalArgumentException();
        }
            catch(IllegalArgumentException exception)
        {
            //will place text in TextFieldTime
            TextFieldMoney.setText("Invalid input, please enter a number greater than 0.");
            
        }   
        
           
            try
        {
            //exception that minimum wage can't be below 0
            if (minimumWage <=0)
            throw new IllegalArgumentException();
        }
            catch(IllegalArgumentException exception)
        {
            //will place text in TextFieldMininumWage
            TextFieldMinimumWage.setText("Invalid input, please enter a number greater than 0.");  
        }
            //user entering information into the array  
            earningsArray [i][0] = minutes;
            earningsArray [i][1] = money;
            // posting the array in the reports area as user enters them  
            TextAreaReport.append(String.valueOf(minutes));
            TextAreaReport.append("\t\t");
            TextAreaReport.append(String.valueOf(money));
            TextAreaReport.append("\n");
            i++;
            // resets the fields for what user needs to reenter.
            TextFieldTime.setText("Please enter minutes.");
            TextFieldMoney.setText("Please enter dollars and cents."); 
                                           
    }//GEN-LAST:event_ButtonEnterActionPerformed

    /**
     * @param args the command line arguments
     */
            
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tutoringEarnings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new tutoringEarnings().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonEnter;
    private javax.swing.JButton ButtonQuit;
    private javax.swing.JButton ButtonRunReport;
    private javax.swing.JLabel LabelMinimumWage;
    private javax.swing.JLabel LabelMoney;
    private javax.swing.JLabel Labeltime;
    private javax.swing.JTextArea TextAreaReport;
    private javax.swing.JTextField TextFieldMinimumWage;
    private javax.swing.JTextField TextFieldMoney;
    private javax.swing.JTextField TextFieldTime;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
